1) pertence() | O(n)
insere() | O(n)
numElementos() |  O(1)
+ | O(n²)
* | O(n²)
- | O(n²)


2) A ordem de complexidade do algoritmo não depende da forma com que os elementos 
estão ordenados nos conjuntos pois em média o tempo será O(n²).


3) 10 - 0m0,002s
100 - 0m0,003s
1000 - 0m0,008s
5000 - 0m0,132s
10000 - 0m0,495s
20000 - 0m2,005s
40000 - 0m7,752s
É possível observar que a ordem de complexidade é quadrática.


4) 10 - 0m0,002s
100 - 0m0,002s
1000 - 0m0,010s
5000 - 0m0,196s
10000 - 0m0,778s
20000 - 0m2,940s
40000 - 0m11,614s
É possível observar que houve uma diferença de tempo pois como todos os elementos de B 
são diferentes de A, a cada elemento inserido no vetor C que vem de B, é preciso verificar 
todos os elementos inseridos previamente que vieram do A. Enquanto no exemplo anterior, os 
elementos de B eram iguais aos de A, então não era necessário verificar todos os elementos 
inseridos previamente que vieram do A. Porém não houve uma diferença na forma como o tempo 
cresce pois a complexidade é quadrática.


5) 10 - 0m0,002s
100 - 0m0,003s
1000 - 0m0,003s
5000 - 0m0,039s
10000 - 0m0,137s
20000 - 0m0,495s
40000 - 0m2,012s
Os tempos gastos foram ligeiramente inferiores.